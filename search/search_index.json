{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CMPUT 401 Projects Portal Documentation","text":"<p>User Guide</p>"},{"location":"admin-guide/","title":"Admin User Guide","text":""},{"location":"admin-guide/#admin-panel","title":"Admin Panel","text":"<ol> <li>Log into Django admin with an admin account</li> <li>Click any of the 'Portal' models to view them<ol> <li>Set any filters on the right of the list to filter</li> </ol> </li> <li>Bulk Publish/Unpublish<ol> <li>Go to the 'Projects' section of Django Admin</li> <li>Set filters to your liking</li> <li>Check the box next to all projects you wish to publish</li> <li>Click the drop down menu next to 'Action'</li> <li>Select which action you wish to perform</li> <li>Click 'Go' to perform action</li> </ol> </li> </ol>"},{"location":"admin-guide/#import-csv","title":"Import CSV","text":"<ol> <li>Click your icon in the top right corner</li> <li>Select option labeled \u2018Import data\u2019</li> <li>Click 'Choose File' and choose a CSV file to import, or drag and drop CSV file into designated area</li> <li>Click 'Validate'</li> <li>If there are no errors, and the response looks correct to you, click 'Import' to create the data</li> <li>Verify the data was successfully created in the Django admin page</li> </ol> <p>Validating the CSV essentially does a dry run of the import, rolling back any changes made at the end.</p>"},{"location":"admin-guide/#csv-format","title":"CSV Format","text":"<p>Every row in the CSV has the following entities:</p> <ol> <li>A project (<code>Project</code>)</li> <li>A client organization (<code>ClientOrg</code>)</li> <li>A client representative (<code>User</code>)</li> <li>A teaching assistant (<code>User</code>)</li> <li>A student (<code>User</code>)</li> </ol> <p>The columns of the CSV are:</p> <ol> <li><code>project_name</code> - unique, required</li> <li><code>project_year</code> - required</li> <li><code>project_term</code> - required, options are <code>Fall</code>, <code>Winter</code>, <code>Spring</code>, <code>Summer</code></li> <li><code>client_org_name</code> - unique, required</li> <li><code>client_rep_email</code> - unique, required</li> <li><code>client_rep_name</code></li> <li><code>client_rep_github_username</code></li> <li><code>ta_email</code> - unique, required</li> <li><code>ta_name</code></li> <li><code>ta_github_username</code></li> <li><code>student_email</code> - unique, required</li> <li><code>student_name</code></li> <li><code>student_github_username</code></li> </ol> <p>When each row in the CSV is processed, the following happens:</p> <ol> <li>Check the DB for a project with the name <code>project_name</code><ol> <li>If none exists, create a new project with <code>project_name</code>, <code>project_year</code>, <code>project_term</code></li> </ol> </li> <li>Check the DB for a client org with the name <code>client_org_name</code><ol> <li>If none exists, create a new client org with <code>client_org_name</code></li> </ol> </li> <li>Check the DB for a user with the email <code>client_rep_email</code><ol> <li>If none exists, create a user with <code>client_rep_email</code>, <code>client_rep_name</code>, <code>client_rep_github_username</code></li> </ol> </li> <li>Check the DB for a user with the email <code>ta_email</code><ol> <li>If none exists, create a user with <code>ta_email</code>, <code>ta_name</code>, <code>ta_github_username</code></li> </ol> </li> <li>Check the DB for a user with the email <code>student_email</code><ol> <li>If none exists, create a user with <code>student_email</code>, <code>student_name</code>, <code>student_github_username</code></li> </ol> </li> <li>Assign client org to project: <code>project.client_org = client_org</code></li> <li>Assign client rep to client org: <code>client_org.reps.add(rep)</code></li> <li>Assign client rep to project: <code>project.rep = rep</code></li> <li>Assign TA to project: <code>project.ta = ta</code></li> <li>Assign student to project: <code>project.students.add(student)</code></li> </ol>"},{"location":"admin-guide/#sample-csv","title":"Sample CSV","text":"<p>This creates 1 project with 1 client org, 1 client rep, and 6 students.</p> <pre><code>project_name,project_year,project_term,client_org_name,client_rep_email,client_rep_name,client_rep_github_username,ta_email,ta_name,ta_github_username,student_email,student_name,student_github_username\nCMPUT 401 Project Portal,2021,Fall,CMPUT 401,ildar@ualberta.ca,Ildar Akhmetov,,mohayemin@ualberta.ca,Mohayeminul Islam,,wfenton@ualberta.ca,Will Fenton,willfenton\nCMPUT 401 Project Portal,2021,Fall,CMPUT 401,ildar@ualberta.ca,Ildar Akhmetov,,mohayemin@ualberta.ca,Mohayeminul Islam,,aakindel@ualberta.ca,Ayo Akindele,aakindel\nCMPUT 401 Project Portal,2021,Fall,CMPUT 401,ildar@ualberta.ca,Ildar Akhmetov,,mohayemin@ualberta.ca,Mohayeminul Islam,,mclean1@ualberta.ca,Kyle McLean,kylemclean\nCMPUT 401 Project Portal,2021,Fall,CMPUT 401,ildar@ualberta.ca,Ildar Akhmetov,,mohayemin@ualberta.ca,Mohayeminul Islam,,nahmed2@ualberta.ca,Natasha Osmani,osmani2\nCMPUT 401 Project Portal,2021,Fall,CMPUT 401,ildar@ualberta.ca,Ildar Akhmetov,,mohayemin@ualberta.ca,Mohayeminul Islam,,crasta@ualberta.ca,Alisha Crasta,alisha03\nCMPUT 401 Project Portal,2021,Fall,CMPUT 401,ildar@ualberta.ca,Ildar Akhmetov,,mohayemin@ualberta.ca,Mohayeminul Islam,,essilfie@ualberta.ca,Andrews Essilfie,essilfie\n</code></pre>"},{"location":"api/","title":"API Documentation","text":"<p>To read the API documentation, start the backend and go to <code>/api/docs/</code> in a web browser.</p>"},{"location":"deployment/","title":"Deployment","text":"<p>This guide covers how to deploy the CMPUT 401 project portal. It is based on this tutorial from DigitalOcean, so if you are running into issues it may be a good resource.</p>"},{"location":"deployment/#assumptions","title":"Assumptions","text":"<p>This guide was written with the following assumptions. If they do not hold, you will likely have to make some modifications to the steps.</p> <ol> <li>The instance is fresh (existing software could interfere)</li> <li>The instance is running Ubuntu 20.04 with an x86 processor (what we tested with)</li> <li>The instance has a public IP and the domain <code>cmput401.ca</code> is setup to point to it.</li> </ol> <p>If you're not using Ubuntu, you will at least have to change any references to the home directory (<code>/home/ubuntu</code>), and likely any <code>apt</code> package manager commands.</p>"},{"location":"deployment/#setup","title":"Setup","text":"<ol> <li>Update software</li> </ol> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt autoremove\n</code></pre> <ol> <li>Install dependencies</li> </ol> <pre><code>sudo apt install python3-dev python3-pip pipenv libpq-dev postgresql postgresql-contrib nginx curl npm\nsudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt install python3.9\n</code></pre>"},{"location":"deployment/#initial-deploy","title":"Initial Deploy","text":"<ol> <li>Clone the repository to <code>~/cmput401-portal</code></li> </ol> <pre><code># to clone with SSH, generate an SSH key on your instance and add it as a deploy key in the repo settings\n# otherwise, you can clone with HTTPS using a personal access token\ngit clone git@github.com:UAlberta-CMPUT401/cmput401-portal.git ~/cmput401-portal\n</code></pre> <ol> <li>Install project dependencies</li> </ol> <pre><code>cd ~/cmput401-portal/\n\n# install python dependencies\npipenv install\n\n# install root node packages\nnpm install\n\n# install frontend node packages\ncd frontend/ &amp;&amp; npm install &amp;&amp; cd -\n</code></pre> <ol> <li>Change the password of the default postgres user</li> </ol> <pre><code>sudo -u postgres psql\n\n# save the password for later\npostgres=# \\password postgres\n\n# exit (ctrl+D)\n</code></pre> <ol> <li>Change postgres authentication from peer to    md5 (source)</li> </ol> <pre><code>sudo sed -i 's/peer/md5/' /etc/postgresql/*/main/pg_hba.conf\nsudo service postgresql restart\n</code></pre> <ol> <li>Generate a Django secret key</li> </ol> <pre><code>pipenv run python -c \"from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())\"\n</code></pre> <ol> <li>Create the file <code>~/cmput401-portal/backend/.env</code> with the following contents</li> </ol> <pre><code># Name of database to connect to\nPG_CONNECT_DATABASE=postgres\n# Name of user to connect with\nPG_CONNECT_USER=postgres\n# Password of user to connect with\nPG_CONNECT_PASSWORD=&lt;password you set earlier&gt;\n\n# Name of database to create\nPORTAL_DB_DATABASE=portal\n# Name of user to create\nPORTAL_DB_USER=portaluser\n# Password of user to create\nPORTAL_DB_PASSWORD=&lt;new password&gt;\n\nDJANGO_SECRET_KEY=&lt;secret key you generated earlier&gt;\n\n# URL template for account activations (used for account activation emails)\nACTIVATION_URL_TEMPLATE=http://cmput401.ca/activate/{activation_key}\n# URL template for password resets (used for password reset emails)\nRESET_PASSWORD_URL_TEMPLATE=http://cmput401.ca/reset-password/{reset_key}\n</code></pre> <ol> <li>Setup the postgres DB</li> </ol> <pre><code>pipenv run python backend/scripts/setup_db.py --reset\n</code></pre> <ol> <li>Setup Django</li> </ol> <pre><code>cd ~/cmput401-portal/backend/\n\n# apply migrations\npipenv run python manage.py migrate\n\n# create admin account\npipenv run python manage.py createsuperuser\n\n# collect static files\npipenv run python manage.py collectstatic\n</code></pre> <ol> <li>Build the website (takes a while)</li> </ol> <pre><code>cd ~/cmput401-portal/frontend/\nnpm run build\n</code></pre> <ol> <li>Create the file <code>/etc/systemd/system/gunicorn.socket</code> as superuser with the following contents</li> </ol> <pre><code>[Unit]\nDescription=gunicorn socket\n\n[Socket]\nListenStream=/run/gunicorn.sock\n\n[Install]\nWantedBy=sockets.target\n</code></pre> <ol> <li>Copy the gunicorn service file</li> </ol> <pre><code>sudo cp ~/cmput401-portal/deployment/gunicorn.service /etc/systemd/system/gunicorn.service\n</code></pre> <ol> <li>Start gunicorn</li> </ol> <pre><code>sudo systemctl start gunicorn.socket\nsudo systemctl enable gunicorn.socket\n</code></pre> <ol> <li>Setup nginx</li> </ol> <pre><code># copy portal site config file\nsudo cp ~/cmput401-portal/deployment/portal-site /etc/nginx/sites-available/portal\n\n# enable the site\nsudo ln -s /etc/nginx/sites-available/portal /etc/nginx/sites-enabled\n\n# disable the default nginx site\nsudo rm /etc/nginx/sites-enabled/default\n\nsudo systemctl restart nginx\n</code></pre> <p>Done! \ud83c\udf89\ud83c\udf8a\ud83e\udd73\ud83c\udf7e The site should now be up on cmput401.ca</p>"},{"location":"deployment/#email-setup","title":"Email setup","text":"<p>In order for the portal to be able to send emails, an email account must be configured in the backend.</p> <ol> <li>Add the following to <code>~/cmput401-portal/backend/.env</code></li> </ol> <pre><code># the server domain for your email provider, for example:\n# Gmail = smtp.gmail.com\n# Outlook/Hotmail = smtp-mail.outlook.com\n# Yahoo = smtp.mail.yahoo.com\nEMAIL_HOST=&lt;SMTP server domain&gt;\n\n# the email address of the host email to send from.\nEMAIL_HOST_USER=&lt;email address to send from&gt;\n\n# the password to the account for EMAIL_HOST_USER\nEMAIL_HOST_PASSWORD=&lt;password to EMAIL_HOST_USER account&gt;\n</code></pre> <ol> <li>In the Django admin panel, add an entry to the mailing list table with your email address</li> <li>Submit a project proposal and verify you received an email on the address you added to the mailing list</li> </ol>"},{"location":"deployment/#gmail-only","title":"Gmail only","text":"<p>After setting up the .env file, you must allow the app to access your account.</p> <ol> <li>Login to the gmail account</li> <li>Go to 'Manage your Google Account'</li> <li>Go to 'Security'</li> <li>Option 1 - 2FA is not enabled<ol> <li>Scroll down to 'Less secure app access'</li> <li>Turn on access</li> </ol> </li> <li>Option 2 - 2FA is enabled:<ol> <li>Scroll down to 'Signing in to Google'</li> <li>Click 'App passwords'</li> <li>For 'Select app' select 'Other' and give your app a name.</li> <li>Save the app password somewhere as you won't be able to see it again</li> <li>Use the app password in lieu of the email account's password for <code>EMAIL_HOST_PASSWORD</code></li> </ol> </li> </ol>"},{"location":"deployment/#github-oauth2-authentication-setup","title":"GitHub OAuth2 Authentication setup","text":"<p>To allow users to log in to their portal accounts with GitHub, you must create an OAuth App on GitHub and configure the frontend and backend to use it.</p>"},{"location":"deployment/#steps","title":"Steps","text":"<ol> <li>Register a new OAuth application on GitHub.<ul> <li>The authorization callback URL must be set to the URL of the <code>/login/callback</code> page on the frontend, which is currently <code>http://cmput401.ca/login/callback</code>.</li> </ul> </li> <li>Copy the client ID of the application.</li> <li>Click the Generate a client secret button and copy the client secret.</li> <li>In <code>backend/.env</code>, set the <code>GITHUB_CLIENT_ID</code> and <code>GITHUB_CLIENT_SECRET</code> variables to the appropriate values.</li> <li>In <code>frontend/.env</code>, set the <code>REACT_APP_GITHUB_CLIENT_ID</code> variable to the client ID.</li> </ol> <p>You must redeploy the frontend as it needs to rebuild so that it uses the new <code>REACT_APP_GITHUB_CLIENT_ID</code> value.</p>"},{"location":"deployment/#redeploy","title":"Redeploy","text":"<p>Redeploying is easy, simply run the redeploy script after pulling your changes.</p> <pre><code>cd ~/cmput401-portal/\nsudo ./deployment/redeploy.sh\n</code></pre>"},{"location":"list-of-all-documents/","title":"All Documents","text":""},{"location":"list-of-all-documents/#planning-documents","title":"Planning Documents","text":"<ul> <li>Project Management</li> <li>Project Requirements</li> <li>Software Design</li> </ul>"},{"location":"list-of-all-documents/#guides","title":"Guides","text":"<ul> <li>User Guide</li> <li>Admin Guide</li> </ul>"},{"location":"list-of-all-documents/#other-documents","title":"Other Documents","text":"<ul> <li>Deployment Documentation</li> <li>Test Documentation</li> <li>API Documentation</li> </ul>"},{"location":"testing/","title":"Test Documentation","text":"<p>Our automated test suite consists of backend and frontend tests.</p>"},{"location":"testing/#backend-tests","title":"Backend tests","text":"<p>The backend tests use Django's test framework to test the functionality of the backend API. They consist of model tests, which test functions on models and how they react to events, as well as view tests, which test how the API's endpoints respond to valid and invalid requests from users.</p> <p>The backend tests are located in the <code>backend/portal/tests</code> directory. They can be run by executing <code>python manage.py test</code> in the <code>backend</code> directory.</p>"},{"location":"testing/#frontend-tests","title":"Frontend tests","text":"<p>Our project consists of two types of frontend tests: tests that use React Testing Library to test the appearance and functionality of the React components of the site, and end-to-end tests using Selenium to test flows of user interaction with the running frontend. Both of these types of tests are run using Jest.</p> <p>We implemented one end-to-end test using Selenium that tests the flow of logging into an account using GitHub. The passing of these tests helps to show that the frontend implementation of GitHub login is working properly.</p> <p>To run all of the frontend tests, run <code>npm test</code> in the <code>frontend</code> directory.</p> <p>To run only the React Testing Library tests, run <code>npm run test:unit</code>.</p> <p>To run only the end-to-end tests, run <code>npm run test:e2e</code>.</p>"},{"location":"testing/#other-testing","title":"Other testing","text":"<p>In addition to the automated tests, there is a test fixture that is designed to be representative of real-world data. This fixture can be loaded in the database of a development environment, allowing a tester to perform manual tests of the site's functionality, such as the acceptance tests of each user story.</p> <p>The realistic test fixture can be loaded into the database by executing <code>python manage.py loaddata realistic_dummy_data</code> in the <code>backend</code> directory.</p>"},{"location":"user-guide/","title":"User Guide","text":""},{"location":"user-guide/#for-all-users","title":"For All Users","text":""},{"location":"user-guide/#access-home-page","title":"Access Home Page","text":"<ol> <li>Click on '401 Projects Portal' logo in the top right corner</li> </ol>"},{"location":"user-guide/#browse-projects","title":"Browse Projects","text":"<ol> <li>Click on 'Browse Projects' tab in navbar</li> <li>To filter projects:<ol> <li>Input keywords into search bar</li> <li>Set filters through drop down menus next to search bar</li> <li>Click arrow to reorganize projects</li> </ol> </li> <li>From ACCESS HOME PAGE:<ol> <li>Browse through select projects for Startups and/or Nonprofits.</li> <li>Scroll down to view projects that are either mobile or web apps.     1. Click arrows on the side to scroll through more projects of that type.</li> <li>Click 'View All' to see all projects of that type.</li> </ol> </li> <li>From VIEW USER PROFILE:<ol> <li>Scroll down to view a user\u2019s projects based on their role.</li> </ol> </li> <li>From VIEW CLIENT:<ol> <li>Scroll down to view all projects for a specific client.</li> </ol> </li> </ol>"},{"location":"user-guide/#view-project","title":"View Project","text":"<ol> <li>From any of the BROWSE PROJECTS options, simply click on the project that interests you to view it\u2019s details.</li> </ol>"},{"location":"user-guide/#share-project","title":"Share Project","text":"<ol> <li>From VIEW PROJECT, click on the icon of the site you wish to share the project to.</li> </ol>"},{"location":"user-guide/#view-user-profile","title":"View User Profile","text":"<ol> <li>From VIEW PROJECT, users are listed based on their role in the project.</li> <li>Click on the avatar of the user that interests you to view their details<ol> <li>If Linkedin icon present:     1. Click to access user\u2019s linkedin profile</li> <li>If World icon present:     1. Click to access user\u2019s website or github</li> </ol> </li> </ol>"},{"location":"user-guide/#browse-clients","title":"Browse Clients","text":"<ol> <li>Click the 'Browse Clients' tab in the navbar</li> <li>To Filter Clients:<ol> <li>Input keywords into search bar</li> <li>Set filters through drop down menus next to search bar</li> <li>Click arrow to reorganize clients</li> </ol> </li> </ol>"},{"location":"user-guide/#view-client","title":"View Client","text":"<ol> <li>From any of the BROWSE CLIENTS options, simply click on the client organization that interests you to view their details</li> </ol>"},{"location":"user-guide/#learn-about-us","title":"Learn About Us","text":"<ol> <li>Click 'About our Work' tab in navbar</li> <li>From ACCESS HOME PAGE:<ol> <li>Scroll down to 'Contributing to our community' section</li> <li>Click on 'Learn About Our Work'</li> </ol> </li> <li>Scroll down to view client testimonials</li> </ol>"},{"location":"user-guide/#submit-a-proposal","title":"Submit a Proposal","text":"<ol> <li>Click on the 'Want us to build you a project?' tab in the navbar</li> <li>From ACCESS HOME PAGE:<ol> <li>Scroll down to 'Contributing to our community' section</li> <li>Click 'Got an idea for a project?'</li> </ol> </li> <li>From BROWSE CLIENTS:<ol> <li>Scroll all the way down to end of page</li> <li>Click 'Submit a Proposal'</li> </ol> </li> <li>Fill out required fields</li> <li>Click 'Submit'</li> <li>Your proposal will be emailed to a representative who will get back to you.</li> </ol>"},{"location":"user-guide/#for-logged-in-users","title":"For Logged in Users","text":""},{"location":"user-guide/#view-your-profile","title":"View Your Profile","text":"<ol> <li>Click your icon in the top right corner</li> <li>Select 'Profile'</li> </ol>"},{"location":"user-guide/#edit-your-profile","title":"Edit Your Profile","text":"<ol> <li>From VIEW YOUR PROFILE, click 'Edit'</li> <li>Fill out required fields</li> <li>To upload profile picture:<ol> <li>Click 'Upload'</li> <li>Select image you wish to upload</li> <li>Click 'Open' or double click desired image</li> </ol> </li> <li>To remove profile picture:<ol> <li>Click trash bin icon by your current icon</li> </ol> </li> <li>Click 'Submit' to save changes</li> </ol>"},{"location":"user-guide/#change-your-password","title":"Change Your Password","text":"<ol> <li>Click your icon in the top right corner</li> <li>Select 'Settings'</li> <li>Click 'Change Password'</li> <li>Input required information and click 'Change Password'</li> </ol>"},{"location":"user-guide/#edit-your-projects","title":"Edit Your Project(s)","text":"<ol> <li>From VIEW YOUR PROFILE, click on the desired project</li> <li>From VIEW PROJECT, click button labeled 'Edit'</li> <li>Fill out required fields</li> <li>To upload screenshot:<ol> <li>Click 'Upload'</li> <li>Select image you wish to upload</li> <li>Click 'Open' or double click desired image</li> </ol> </li> <li>To remove screenshot:<ol> <li>Click on trash bin icon by your current screenshot</li> </ol> </li> <li>Click 'Submit' to save changes</li> </ol>"},{"location":"user-guide/#edit-your-client-organization-info","title":"Edit Your Client Organization Info","text":"<ol> <li>From VIEW YOUR PROFILE, click on the desired project from your 'CLIENT REPRESENTATIVE PROJECTS' category</li> <li>From VIEW PROJECT, click the avatar under the 'CLIENT' section</li> <li>Click 'Edit'</li> <li>Fill out required fields</li> <li>To upload logo image:<ol> <li>Click 'Upload'</li> <li>Select image you wish to upload</li> <li>Click 'Open' or double click desired image</li> </ol> </li> <li>To remove logo:<ol> <li>Click trash bin icon by the current logo image</li> </ol> </li> <li>Click 'Submit' to save changes</li> </ol>"},{"location":"user-guide/#logout","title":"Logout","text":"<ol> <li>Click your icon in the top right corner</li> <li>Select 'Log Out'</li> <li>To log out other sessions:<ol> <li>Click your icon in the top right corner</li> <li>Select 'Settings'</li> <li>Click 'Log out of all other sessions'</li> </ol> </li> </ol>"},{"location":"planning/ProjectManagement/","title":"Project Management","text":"<p>Contributors: Ayo, Alisha, Andrews, Will, Kyle, Natasha</p> <p>Last Updated: November 24, 2021</p>"},{"location":"planning/ProjectManagement/#story-map","title":"Story Map","text":""},{"location":"planning/ProjectManagement/#project-plan","title":"Project Plan","text":""},{"location":"planning/ProjectManagement/#sprint-1","title":"Sprint 1","text":"<p>Due: September 25</p> Rubric Description Task To-Do Assigned To Date To Complete By Executive Summary Project Requirements Doc Ayo September 17 Project Glossary Project Requirements Doc Ayo, Kyle September 23 User Stories Project Requirements Doc Everyone September 23 Similar Products Project Requirements Doc Ayo, Natasha September 15 Open-source Products Project Requirements Doc Ayo, Alisha September 15 Technical Resources Project Requirements Doc Ayo, Will, Andrews, Kyle September 15 Architecture/Component Diagram Software Design Doc Will September 23 UML Class Diagram Software Design Doc Natasha September 23 Sequence Diagram Software Design Doc Will, Kyle September 23 Low-Fidelity User Interface Software Design Doc Ayo, Alisha September 22 Story Map Project Management Doc Ayo, Will September 23 Project Plan Project Management Doc Ayo September 23 Team Canvas Project Management Doc Everyone September 15 Deploy Documentation All Docs Everyone September 24"},{"location":"planning/ProjectManagement/#sprint-2","title":"Sprint 2","text":"<p>Due: October 16</p> Rubric Description Task To-Do Assigned To Date To Complete By PostgreSQL database setup Backend Setup Kyle September 27 Django models Backend Setup Andrews September 27 Create Custom User Model and Register Models with Admin Page Backend Setup Kyle September 27 Login with Email and Password as Admin US 4.11.1 Natasha September 28 Individually Create Users and Projects (make default student and client accounts) US 4.32.1 Will September 29 View All Users US 4.31.1 Kyle September 29 View All Projects as Admin US 4.51.1 Natasha September 29 Add Linting (esLint) and Formatting (Prettier) Dev Env Setup Ayo, Will September 30 Add Continuous Integration (CI) GitHub Actions Workflows Dev Env Setup Ayo, Will October 1 Set Up Django REST Framework and Create Model Serializers Backend Setup Kyle October 1 Set Up Material UI Frontend Task Will October 1 Create Dummy Data to Populate Backend With Backend Setup Andrews October 1 Create Custom UserAdmin Admin Class for Custom User Model Backend Setup Kyle October 1 Add Husky and Lint-Staged for Git Hooks That Run Pre-Commit, on PRs, etc. Dev Env Setup Ayo October 2 Add Scripts with Simpler Commands for Formatting Code, Launching Servers, etc. Dev Env Setup Ayo October 2 Add CORS Headers to Django Settings (for frontend-backend communication) Task Kyle October 3 Integrate Frontend and Backend with API Task Ayo, Will October 3 Delete User and Stuff that is Dependent on the User US 4.34.1 Andrews October 4 Delete Project and Stuff that is Dependent on the Project US 4.54.1 Andrews October 4 Edit Student, TA, Client, and Admin Information US 4.33.1 Will October 4 Set Up View Clients Page Frontend Task Kyle October 4 Add Logo and Fonts for Default Frontend Theme Frontend Task Ayo October 5 Set Up PostgreSQL for <code>test-backend</code> CI Job Dev Env Setup Kyle October 6 Add View Testing to Backend Testing Kyle October 6 Set Up Portal Navbar Frontend Task Ayo October 6 Submit the Proposal Form US 3.51.1 Andrews October 6 Set Up Functionality to Send Emails When Proposal is Submitted Task Alisha October 7 Update Functionality to Send Emails When Proposal is Submitted Task Natasha October 7 Set Up EditProject Page Frontend Task Ayo October 7 Edit Title, Overview and Executive Summary in Project Page US 1.21.1 Ayo October 7 Edit External Links in Project Page US 1.21.2 Ayo October 7 Edit Embed Links in Project Page US 1.21.3 Ayo October 7 View Project Page US 3.32.1 Alisha October 8 Set Up View Projects Page Frontend Task Will October 8 View All Projects as User US 3.31.1 Will October 8 Update Backend API Methods Backend Task Natasha October 8 Update Django Admin UI Task Andrews October 8 Individually Publish Projects US 4.53.1 Natasha October 8 Edit Whatever Client Can Edit as Admin US 4.52.1 Kyle October 8 Make Unpublished Projects Only Visible to Users Associated With Them and Admins Task Kyle October 9 Set Up Proposal Page Frontend Task Ayo October 9 Set Up EditProfile Page Frontend Task Ayo October 9 Write ClientOrg and User Backend Tests Testing Natasha October 9 Write Project and Proposal Viewset Tests Testing Andrews October 9 Submit EditProfile Page Edits to the Backend Backend Task Andrews October 12 Set Up View Client (Organization) Page Frontend Task Alisha October 12 Set Up View Profile Page Frontend Task Alisha October 12 Edit Name, Bio, and Social Links as Student US 1.31.1 Ayo October 12 View Student Profile Page US 3.42.1 Alisha October 13 View Client Profile Page US 3.41.1 Alisha October 13 View All Clients US 3.21.1 Kyle October 13 Set Up Authentication and Log In Page Task Kyle October 14 Update Docs to Address Feedback Feedback Task Natasha October 14 Update Docs with Sprint Updates Task Ayo October 14 View Filtered Clients (nonprofit, startup) US 3.21.2 Will October 15 View Projects Filtered by Project Properties as User US 3.31.3 Will October 15 Deploy to Production (Cybera) Deployment Will October 15"},{"location":"planning/ProjectManagement/#sprint-3","title":"Sprint 3","text":"<p>Due: November 13</p> Rubric Description Task To-Do Assigned To Date To Complete By Login with GitHub US 1.11.1 Will October 20 Edit Tags as Admin US 4.52.2 Andrews October 18 View Projects Filtered by Tags as Admin US 4.51.2 Natasha October 20 View Projects Filtered by Project Properties as Admin US 4.51.3 Natasha October 29 Edit Tags as Student US 1.21.4 Alisha October 25 Automatically Use GitHub Profile Picture US 1.31.2 Ayo October 22 Edit Tags as Client US 2.21.3 Alisha October 25 Edit Individual User Permissions US 4.42.1 Kyle October 27 View Filtered Users US 4.31.2 Andrews October 29 Get Email Notifications with New Proposals US 4.21.1 Will October 29 Only Get Notifications if Subscribed Admin US 4.21.2 Will October 29 View Home Page US 3.11.1 Ayo November 1 View About Page US 3.12.1 Ayo November 3 View Embedded Screencast US 3.32.2 Kyle November 5 View Embedded Storyboard US 3.32.3 Alisha November 5 View Embedded Presentation US 3.32.4 Andrews November 5 Login with Email and Password as Client US 2.11.1 Natasha November 3 Edit Name, Bio, and Social Links as Client US 2.31.1 Will November 8 Edit Name, Description, Website, and Social Links as Client US 2.41.1 Alisha November 8 Edit Logo Link US 2.41.2 Ayo November 8 Bulk Create Users and Projects US 4.32.2 Kyle November 10 Bulk Publish Projects US 4.53.2 Kyle November 10 View Clients with Infinite Scroll US 3.21.3 Andrews November 10 Have Pre-defined User Role Permissions US 4.41.1 Natasha November 12 Share Project to Facebook &amp; LinkedIn US 3.32.5 Ayo November 12 Deploy to Production Deployment Everyone November 12"},{"location":"planning/ProjectManagement/#sprint-4","title":"Sprint 4","text":"<p>Due: November 26</p> Rubric Description Task To-Do Assigned To Date To Complete By Upload Screenshots as Admin US 4.52.3 Natasha November 17 Upload Screenshots as Student US 1.21.5 Alisha November 17 Upload Screenshots as Client US 2.21.4 Alisha November 17 Edit Profile Picture as Student US 1.31.3 Ayo November 15 Edit Profile Picture as Client US 2.31.2 Andrews November 15 Storyboard thumbnail image can be expanded on click US 3.32.6 Ayo November 19 Fuzzy Search Clients US 3.21.4 Will November 22 Fuzzy Search Projects US 3.31.4 Kyle November 22 Test Documentation Documentation Everyone November 24 Client Documentation Documentation Everyone November 24 Screencast Screencast Everyone November 24 Presentation Presentation Everyone November 24 Deploy to Production Deployment Everyone November 24"},{"location":"planning/ProjectManagement/#team-canvas","title":"Team Canvas","text":""},{"location":"planning/ProjectManagement/#scrum-roles","title":"Scrum Roles","text":""},{"location":"planning/ProjectManagement/#sprint-1_1","title":"Sprint 1","text":"Scrum Master Project Owner Ayo Akindele Alisha Crasta"},{"location":"planning/ProjectManagement/#sprint-2_1","title":"Sprint 2","text":"Scrum Master Project Owner Will Fenton Ayo Akindele"},{"location":"planning/ProjectManagement/#sprint-3_1","title":"Sprint 3","text":"Scrum Master Project Owner Will Fenton Ayo Akindele"},{"location":"planning/ProjectManagement/#sprint-4_1","title":"Sprint 4","text":"Scrum Master Project Owner Will Fenton Ayo Akindele"},{"location":"planning/ProjectRequirements/","title":"Project Requirements","text":"<p>Contributors: Ayo, Alisha, Andrews, Will, Kyle, Natasha</p> <p>Date: Friday, September 24, 2021</p>"},{"location":"planning/ProjectRequirements/#executive-summary","title":"Executive Summary","text":"<p>The CMPUT 401 project portal will solve the problem of CMPUT 401 students not easily being able to showcase their CMPUT 401 projects to potential employers or to prove that they worked on their CMPUT 401 projects. It will also solve the problem of connecting Albertan nonprofits and early stage startups that have interesting project ideas with teams of CMPUT 401 students who can help implement those ideas. Additionally, the project portal will solve the problem of CMPUT 401 instructors not easily being able to find enough projects for CMPUT 401 students to work on. The project portal's users will be Albertan nonprofits and early stage startups; students; and employers or any other people that are interested in viewing the projects on the portal. The value proposition / essential functionality of the project portal is to connect Albertan nonprofits and early stage startups with teams of students who can help make the nonprofits' and startups' interesting ideas a reality.</p>"},{"location":"planning/ProjectRequirements/#project-glossary","title":"Project Glossary","text":"<ul> <li>Project: A project is an app or web app that is being built or was built for a client by students.</li> <li>Project Proposal: A project proposal is a description of a potential project for students to work on.</li> <li>Client Organization: A client organization provides a project or many projects for students to work on. Client organizations are primarily Albertan nonprofits or startups, but they could be any organization (e.g. academic institutions like the University of Alberta).</li> <li>Client Representative: A client representative is a representative of a client organization. Client representatives are primarily the people from the client organization that students will meet with as the students work on the project.</li> <li>Admin: An admin is a type of user with the ability to accept project proposals, update project information, update user information, and more.</li> <li>Student: A student is a CMPUT 401 student.</li> <li>Instructor: An instructor is a CMPUT 401 instructor. Instructors are admins.</li> <li>TA: A TA is a teaching assistant of CMPUT 401.</li> <li>User: A user is someone who can login to the project portal. Students, instructors, TAs, client representatives, and admins are users.</li> <li>Visitor: A visitor is someone who cannot login to the project portal. Employers and other people who view the portal without logging in are visitors.</li> </ul>"},{"location":"planning/ProjectRequirements/#user-stories","title":"User Stories","text":""},{"location":"planning/ProjectRequirements/#us-1111-login-with-github","title":"US 1.11.1 - Login with GitHub","text":"<p>As a student, I want to login to my account using GitHub so that I can access my account.</p> <p>Acceptance Tests</p> <ul> <li>Given that a student has an account created for them by an admin, when they click the Login with GitHub button and are authorized by GitHub, then they should logged in to the portal.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-1211-edit-title-overview-executive-summary","title":"US 1.21.1 - Edit Title, Overview &amp; Executive Summary","text":"<p>As a student, I want to edit my project's title, overview, and executive summary so that my project page's information can be accurate.</p> <p>Acceptance Tests</p> <ul> <li>Given that a project has been created and that a logged in student has edited their project's title, overview, and executive summary, when they click the \u201cSave Edits\u201d button, their changes should be saved to the database.</li> <li>Given that a logged in student has finished editing the project\u2019s information and that the student\u2019s edits have been saved, when the student refreshes their project page, the student\u2019s edits should be applied.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-1212-edit-external-links-github-repo-project-link","title":"US 1.21.2 - Edit External Links (GitHub Repo, Project Link)","text":"<p>As a student, I want to edit my external links (GitHub repo link, project link) so that portal users can easily access the project repo and the hosted project.</p> <p>Acceptance Tests</p> <ul> <li>Given that a project has been created and that a logged in student has edited their project's external links, when they click the \u201cSave Edits\u201d button, their changes should be saved to the database.</li> <li>Given that a logged in student has finished editing the project\u2019s information and that the student\u2019s edits have been saved, when the student refreshes their project page, the student\u2019s edits should be applied.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-1213-edit-embed-links-screencast-presentation-storyboard","title":"US 1.21.3 - Edit Embed Links (Screencast, Presentation, Storyboard)","text":"<p>As a student, I want to edit my project's embed links (screencast link, presentation link, storyboard link) so that my project page's information can be accurate.</p> <p>Acceptance Tests</p> <ul> <li>Given that a project has been created and that a logged in student has edited their project's embed links, when they click the \u201cSave Edits\u201d button, their changes should be saved to the database.</li> <li>Given that a logged in student has finished editing the project\u2019s information and that the student\u2019s edits have been saved, when the student refreshes their project page, the student\u2019s edits should be applied.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-1214-edit-tags-as-student","title":"US 1.21.4 - Edit Tags as Student","text":"<p>As a student, I want to edit my project's tags so that portal users can discover my project with the tag filtering system.</p> <p>Acceptance Tests</p> <ul> <li>Given that a project has been created and that a student has edited their project's tags, when they click the \u201cSave Edits\u201d button, their changes should be saved to the database.</li> <li>Given that a student has finished editing the project\u2019s information and that the student\u2019s edits have been saved, when the student refreshes their project page, the student\u2019s edits should be applied.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-1215-upload-screenshots-as-student","title":"US 1.21.5 - Upload Screenshots as Student","text":"<p>As a student, I want to upload project screenshots so that portal users can see what my project looks like without having to watch the project screencast.</p> <p>Acceptance Tests</p> <ul> <li>Given that a project has been created and that a student has added their screenshots, when they click the \u201cUpload Screenshots\u201d button, their changes should be saved to the database and the screenshots should be saved to the server.</li> <li>Given that a student has finished editing the uploading screenshots and that the student\u2019s edits have been saved, when the student refreshes their project page, the student\u2019s uploaded screenshots should be visible.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-1311-edit-name-bio-and-social-links-as-student","title":"US 1.31.1 - Edit Name, Bio, and Social Links as Student","text":"<p>As a student, I want to edit the name, bio, and social platform links in my profile so that my profile page's information can be accurate.</p> <p>Acceptance Tests</p> <ul> <li>Given that a logged in student has edited their profile name, bio and social links, when they click the \u201cSave Edits\u201d button, their changes should be saved to the database.</li> <li>Given that a logged in student has finished editing the profile name, bio and social links, and that the student\u2019s edits have been saved, when the student refreshes their profile page or goes to any other page in which the edited information appears, the student\u2019s edits should be applied.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-1312-automatically-use-github-profile-picture","title":"US 1.31.2 - Automatically Use GitHub Profile Picture","text":"<p>As a student, I want to automatically have my GitHub profile picture as my portal profile picture so that my profile can automatically have an interesting profile picture.</p> <p>Acceptance Tests</p> <ul> <li>Given that a student has a profile picture on their GitHub, when an account is created for the student, then the students profile picture must be the same as their GitHub profile</li> <li>Given that a student does not have a profile picture on their GH, when an account is created for them, then the students profile picture will be the same as the default GH profile picture</li> </ul>"},{"location":"planning/ProjectRequirements/#us-1313-edit-profile-picture-as-student","title":"US 1.31.3 - Edit Profile Picture as Student","text":"<p>As a student, I want to edit the picture in my profile so that I can personally select the profile picture that would fit the portal best.</p> <p>Acceptance Tests</p> <ul> <li>Given that a logged in student has edited their profile picture, when they click the \u201cSave Edits\u201d button, their changes should be saved to the database.</li> <li>Given that a logged in student has finished editing the profile picture and that the student\u2019s edits have been saved, when the student refreshes their profile page or goes to any other page in which their profile picture appears, the student\u2019s edits should be applied.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2111-login-with-email-and-password-as-client","title":"US 2.11.1 - Login with Email and Password as Client","text":"<p>As a client representative, I want to login to my account using my email and password so that I can access my account.</p> <p>Acceptance Tests</p> <ul> <li>Given an unauthenticated user, when submitting a correct email and password combination for a representative user account, the user is authenticated as that client representative.</li> <li>Given an unauthenticated user, when submitting an incorrect email and password combination, the user remains unauthenticated.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2211-edit-whatever-student-can-edit-as-client","title":"US 2.21.1 - Edit Whatever Student Can Edit as Client","text":"<p>As a client representative, I want to edit whatever the students working on my project can edit so that the project page's information can be accurate.</p> <p>Acceptance Tests</p> <ul> <li>The acceptance tests of the following user stories must pass for client representatives:     - US 1.21.1 - Students can edit project title, overview, executive summary     - US 1.21.2 - Student can edit projects external links     - US 1.21.3 - Student can edit a project embed link</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2212-edit-client-review","title":"US 2.21.2 - Edit Client Review","text":"<p>As a client representative, I want to edit my client review so that the project page of my completed project can display my review of the project.</p> <p>Acceptance Tests</p> <ul> <li>Given a logged in client representative and a completed project for that client, when the client representative chooses to edit their review and submits the change, the change is reflected on the project page.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2213-edit-tags-as-client","title":"US 2.21.3 - Edit Tags as Client","text":"<p>As a client representative, I want to edit my project's tags so that portal users can discover my project with the tag filtering system.</p> <p>Acceptance Tests</p> <ul> <li>The acceptance tests of the following user stories must pass for client representatives:     - US 1.21.4 - Edit tags as student</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2214-upload-screenshots-as-client","title":"US 2.21.4 - Upload Screenshots as Client","text":"<p>As a client representative, I want to upload project screenshots so that portal users can see what my project looks like without having to watch the project screencast.</p> <p>Acceptance Tests</p> <ul> <li>The acceptance tests of the following user stories must pass for client representatives:     - US 1.21.5 - Upload screenshots as student</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2311-edit-user-name-bio-and-social-links-as-client","title":"US 2.31.1 - Edit User Name, Bio, and Social Links as Client","text":"<p>As a client representative, I want to edit the name, bio, and social platform links in my profile so that my profile page's information can be accurate.</p> <p>Acceptance Tests</p> <ul> <li>Given that a logged in client has edited their profile name, bio and social links, when they click the \u201cSave Edits\u201d button, their changes should be saved to the database.</li> <li>Given that a logged in client has finished editing the profile name, bio and social links, and that the client\u2019s edits have been saved, when the student refreshes their profile page or goes to any other page in which the edited information appears, the client\u2019s edits should be applied.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2312-edit-user-profile-picture-as-client","title":"US 2.31.2 - Edit User Profile Picture as Client","text":"<p>As a client representative, I want to edit the picture in my profile so that I can personally select the profile picture that would fit the portal best.</p> <p>Acceptance Tests</p> <ul> <li>Given that a logged in client has edited their profile picture, when they click the \u201cSave Edits\u201d button, their changes should be saved to the database.</li> <li>Given that a logged in client has finished editing the profile picture and that the client\u2019s edits have been saved, when the client refreshes their profile page or goes to any other page in which their profile picture appears, the client\u2019s edits should be applied.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2411-edit-organization-name-description-website-and-social-links-as-client","title":"US 2.41.1 - Edit Organization Name, Description, Website, and Social Links as Client","text":"<p>As a client representative, I want to edit the name, description, website and social platform links in my organization's page so that the portal's information about my organization can be accurate.</p> <p>Acceptance Tests</p> <ul> <li>Given a logged in client representative, when changes are made to the name, description, website link, or social platform links of their organization's profile page, the changes are reflected on the organization profile page and anywhere else that information appears.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-2412-edit-client-organization-logo","title":"US 2.41.2 - Edit Client Organization Logo","text":"<p>As a client representative, I want to edit the logo in my organization's profile so that I can accurately represent my organization on the portal.</p> <p>Acceptance Tests</p> <ul> <li>Given a logged in client representative, when changes are made to their organization logo, the change is reflected on the organization profile page and anywhere else the organization's logo appears.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3111-view-home-page","title":"US 3.11.1 - View Home Page","text":"<p>As a visitor, I want to view the portal's home page so that I can see some of the portal's projects.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor, when the visitor visits the home route, then the visitor should see the home page</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3121-view-about-page","title":"US 3.12.1 - View About Page","text":"<p>As a visitor, I want to view the portal's about page so that I can learn more about the portal.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor, when the visitor visits the about route, then the visitor should see the about page</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3211-view-all-clients","title":"US 3.21.1 - View All Clients","text":"<p>As a visitor, I want to view all the portal's clients so that I can see which organizations have previously worked with the portal.</p> <p>Acceptance Tests</p> <ul> <li>Given that client organizations have been created, when a user navigates to the View All Clients page, then a list of all clients (who have at least one published project) is displayed.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3212-view-filtered-clients-nonprofit-startup","title":"US 3.21.2 - View Filtered Clients (nonprofit, startup)","text":"<p>As a visitor, I want to view a filtered list of the portal's clients so that I can see the organizations that have previously worked with the portal that match some filters.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor that is on the all clients page, when the visitor clicks the button to filter by nonprofits, then the visitor should see the only the clients that are nonprofits (and the same occurs for other filters).</li> <li>Given a site visitor that is on the all clients page, when the visitor clicks the button to remove a filter and all filters have been removed, then the visitor should see all clients.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3213-view-clients-with-infinite-scroll","title":"US 3.21.3 - View Clients with Infinite Scroll","text":"<p>As a visitor, I want to view the portal's clients with infinite scroll so that I don't have to click any buttons when viewing the clients.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor, when the visitor vists the all clients page, X number of clients should appear on the page.</li> <li>Given a site visitor that is on the all clients page with some clients loaded, when the visitor scrolls to the bottom of the page, then X more clients should appear on the page.</li> <li>Given a site visitor that is on the all clients page, when the visitor scrolls to the bottom of page and there are no more clients to load, then no more clients should appear.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3214-fuzzy-search-clients","title":"US 3.21.4 - Fuzzy Search Clients","text":"<p>As a visitor, I want to view fuzzy search clients so that I can look up clients without having to scroll through the client list.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor that is on the all clients page, when the visitor types something into the search field, then the clients that match that thing should appear on the page.</li> <li>Given a site visitor that is on the all clients page, when the visitor empties out the search field, then all clients should appear on the page.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3311-view-all-projects-as-visitor","title":"US 3.31.1 - View All Projects as Visitor","text":"<p>As a visitor, I want to view all the portal's projects so that I can see what projects CMPUT 401 has previously produced.</p> <p>Acceptance Tests</p> <ul> <li>Given that projects have been created, when a user navigates to the View All Projects page, then a list of all projects (that have been published) is displayed.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3312-view-projects-filtered-by-tags-as-visitor","title":"US 3.31.2 - View Projects Filtered by Tags as Visitor","text":"<p>As a visitor, I want to view a filtered list of the portal's projects so that I can see the projects that CMPUT 401 has previously produced that match some tags.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor that is on the all projects page, when the visitor clicks the button to filter by some tag, then the visitor should see the only the projects that have that tag (and the same occurs for other filters).</li> <li>Given a site visitor that is on the all projects page, when the visitor clicks the button to remove a filter and all filters have been removed, then the visitor should see all projects.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3313-view-projects-filtered-by-project-properties-as-visitor","title":"US 3.31.3 - View Projects Filtered by Project Properties as Visitor","text":"<p>As a visitor, I want to view a filtered list of the portal's projects so that I can see the projects that CMPUT 401 has previously produced that match some properties.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor that is on the View Projects page, when the visitor clicks a button to filter by some property, then the visitor should see the only the projects that have that property (and the same occurs for other filters).</li> <li>Given a site visitor that is on the View Projects page, when the visitor clicks the button to remove a filter and all filters have been removed, then the visitor should see all projects.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3314-fuzzy-search-projects","title":"US 3.31.4 - Fuzzy Search Projects","text":"<p>As a visitor, I want to view fuzzy search projects so that I can look up projects without having to scroll through the project list.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor that is on the all projects page, when the visitor types something into the search field, then the projects that match that thing should appear on the page.</li> <li>Given a site visitor that is on the all projects page, when the visitor empties out the search field, then all projects should appear on the page.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3321-view-project-page","title":"US 3.32.1 - View Project Page","text":"<p>As a visitor, I want to view a project's page on the portal so that I can see what the project is about.</p> <p>Acceptance Tests</p> <ul> <li>Given that a project has been created, when a user navigates to the View Project page for the project, then the project\u2019s details are displayed.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3322-view-embedded-screencast","title":"US 3.32.2 - View Embedded Screencast","text":"<p>As a visitor, I want to view an embedded screencast on a portal project page so that I can watch the screencast directly on the portal.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor, when the visitor visits a project page, then the visitor should be able to see the project screencast on the project page, if the project has a screencast.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3323-view-embedded-storyboard","title":"US 3.32.3 - View Embedded Storyboard","text":"<p>As a visitor, I want to view an embedded storyboard on a portal project page so that I can see the storyboard directly on the portal.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor, when the visitor visits a project page, then the visitor should be able to see the project storyboard on the project page, if the project has a storyboard.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3324-view-embedded-presentation","title":"US 3.32.4 - View Embedded Presentation","text":"<p>As a visitor, I want to view an embedded presentation on a portal project page so that I can see the presentation directly on the portal.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor, when the visitor visits a project page, then the visitor should be able to see the project presentation on the project page, if the project has a presentation.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3325-share-project-to-facebook-linkedin","title":"US 3.32.5 - Share Project to Facebook &amp; LinkedIn","text":"<p>As a visitor, I want to share a project that I like to Facebook and LinkedIn so that I can let others know about the project.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor that is on a project page, when the visitor clicks on the \u201cShare to LinkedIn\u201d button (same for other share buttons), then the visitor should be sent to LinkedIn where they\u2019ll be able to share the project.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3326-storyboard-thumbnail-image-can-be-expanded-on-click","title":"US 3.32.6 - Storyboard thumbnail image can be expanded on click","text":"<p>As a visitor, I want a project's storyboard thumbnail image to expand on click so that I can selectively choose to either focus or not focus on the project storyboard by clicking on it.</p> <p>Acceptance Tests</p> <ul> <li>Given a site visitor that is on a project page, when the visitor clicks on a storyboard\u2019s thumbnail image, then the storyboard image should open up larger as a modal.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3411-view-client-profile-page","title":"US 3.41.1 - View Client Profile Page","text":"<p>As a visitor, I want to view a client's profile page on the portal so that I can learn more about the client.</p> <p>Acceptance Tests</p> <ul> <li>Given that a client organization has been created, when a user navigates to the View Client page for the client organization, then the client organization\u2019s details are displayed.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3421-view-student-profile-page","title":"US 3.42.1 - View Student Profile Page","text":"<p>As a visitor, I want to view a student's profile page on the portal so that I can learn more about the student.</p> <p>Acceptance Tests</p> <ul> <li>Given that a student account has been created, when a user navigates to the View Profile page for the student, then the student\u2019s details are displayed.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-3511-submit-the-proposal-form","title":"US 3.51.1 - Submit the Proposal Form","text":"<p>As a visitor, I want to submit a project proposal form so that I can collaborate with CMPUT 401 to build some projects and to get those projects placed on the portal.</p> <p>Acceptance Tests</p> <ul> <li>Given a client has a project proposal, when the client submits the proposal, then an email relating to the proposal gets sent to the admins.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4111-login-with-email-and-password-as-admin","title":"US 4.11.1 - Login with Email and Password as Admin","text":"<p>As an admin, I want to login to my account using my email and password so that I can access my account.</p> <p>Acceptance Tests</p> <ul> <li>Given that an admin already has a Django Admin account, when the admin enters their email and password at the login screen in Django Admin and clicks the login button, then the admin is successfully logged into their account.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4211-get-email-notifications-with-new-proposals","title":"US 4.21.1 - Get Email Notifications with New Proposals","text":"<p>As an admin, I want to get email notifications with new project proposals so that I can respond to the proposals.</p> <p>Acceptance Tests</p> <ul> <li>Given a client had a project proposal, when the client submits the proposal then the admins get an email notification.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4212-only-get-notifications-if-subscribed-admin","title":"US 4.21.2 - Only Get Notifications if Subscribed Admin","text":"<p>As an admin, I want to only get notifications if I'm a subscribed admin so that I don't get unnecessary notifications if I'm not responsible for handling proposals.</p> <p>Acceptance Tests</p> <ul> <li>Given a client had a project proposal, when the client submits the proposal then the subscribed admins get an email notification while the others do not.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4311-view-all-users","title":"US 4.31.1 - View All Users","text":"<p>As an admin, I want to view all users so that I can keep track of who's using the project portal.</p> <p>Acceptance Tests</p> <ul> <li>Given that user accounts have already been created, when a logged in admin navigates to the \u201cUsers\u201d page in Django Admin, then a list of all the users is displayed.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4312-view-filtered-users","title":"US 4.31.2 - View Filtered Users","text":"<p>As an admin, I want to view a filtered list of users so that I can see only the users that I want to see in a particular moment.</p> <p>Acceptance Tests</p> <ul> <li>Given a list of users on the project portal, when the admin sets some filters then the list of users gets filtered.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4321-individually-create-users-and-projects","title":"US 4.32.1 - Individually Create Users and Projects","text":"<p>As an admin, I want to individually create users and projects so that I can easily add new users and projects to the system.</p> <p>Acceptance Tests</p> <ul> <li>Given information about a user, when a logged in admin submits the appropriately filled in Django Admin forms to create the new user account, then the new user account is created and can be viewed in the \u201cUsers\u201d page in Django Admin.</li> <li>Given information about a project, when a logged in admin submits the appropriately filled in Django Admin forms to create the new project, then the new project is created and can be viewed in the \u201cProjects\u201d page in Django Admin.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4322-bulk-create-users-and-projects","title":"US 4.32.2 - Bulk Create Users and Projects","text":"<p>As an admin, I want to bulk create users and projects so that I can easily add a large amount of new users and projects to the system.</p> <p>Acceptance Tests</p> <ul> <li>Given a CSV file of users and projects, when the admin uploads this file then profiles and accounts are created for all projects and users.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4331-edit-student-ta-client-and-admin-information","title":"US 4.33.1 - Edit Student, TA, Client, and Admin Information","text":"<p>As an admin, I want to edit student, TA, client, and admin information so that I can maintain the accuracy of the portal's information about its users.</p> <p>Acceptance Tests</p> <ul> <li>Given that student and TA accounts have been created, when a logged in admin edits the student or TA account information, then those edits are reflected in the student or TA profile.</li> <li>Given that a client organization has been created, when a logged in admin edits the client organization\u2019s account information, then those edits are reflected in the client organization\u2019s page.</li> <li>Given that an admin already has a Django Admin account and has permission to edit other admin accounts, when a logged in admin edits an admin\u2019s account information, then those edits are saved.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4341-delete-user-and-stuff-that-is-dependent-on-the-user","title":"US 4.34.1 - Delete User and Stuff that is Dependent on the User","text":"<p>As an admin, I want to delete a user and the stuff that is dependent on the user so that I can maintain the accuracy of the portal's information about its users.</p> <p>Acceptance Tests</p> <ul> <li>Given a user account in Django Admin, when a logged in admin deletes the user account, then the user account and any information dependent on the user account is deleted from Django Admin.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4411-have-pre-defined-user-role-permissions","title":"US 4.41.1 - Have Pre-defined User Role Permissions","text":"<p>As an admin, I want to have pre-defined user role permissions so that I can easily set user permissions by assigning those users to roles.</p> <p>Acceptance Tests</p> <ul> <li>Given a set of role permissions, when the admin assigns a user a role then that user is able perform actions permitted by their role permissions.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4421-set-users-admin-status","title":"US 4.42.1 - Set User\u2019s Admin Status","text":"<p>As an admin, I want to edit individual user permissions so that I can easily update user permissions for particular users.</p> <p>Acceptance Tests</p> <ul> <li>Given a logged in admin that has the permission to update other accounts\u2019 permissions, when they grant another user account staff and superuser permissions, then that other user has staff and superuser permissions.</li> <li>Given a logged in admin that has the permission to update other accounts\u2019 permissions, when they revoke another user account\u2019s staff and superuser permissions, then that other user no longer has staff and superuser permissions.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4511-view-all-projects-as-admin","title":"US 4.51.1 - View All Projects as Admin","text":"<p>As an admin, I want to view all the portal's projects so that I can see what projects CMPUT 401 has previously produced.</p> <p>Acceptance Tests</p> <ul> <li>Given that projects have already been created, when a logged in admin navigates to the \u201cProjects\u201d page in Django Admin, then a list of all the projects is displayed.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4512-view-projects-filtered-by-tags-as-admin","title":"US 4.51.2 - View Projects Filtered by Tags as Admin","text":"<p>As an admin, I want to view a filtered list of the portal's projects so that I can see the projects that CMPUT 401 has previously produced that match some tags.</p> <p>Acceptance Tests</p> <ul> <li>Given a list of all projects on the portal, when the admin sets tags then the list of projects gets filtered to projects with those tags.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4513-view-projects-filtered-by-project-properties-as-admin","title":"US 4.51.3 - View Projects Filtered by Project Properties as Admin","text":"<p>As an admin, I want to view a filtered list of the portal's projects so that I can see the projects that CMPUT 401 has previously produced that match some properties.</p> <p>Acceptance Tests</p> <ul> <li>Given a list of all projects on the portal, when the admin sets what properties they want then the list of projects gets filtered to projects with those properties.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4521-edit-whatever-client-can-edit-as-admin","title":"US 4.52.1 - Edit Whatever Client Can Edit as Admin","text":"<p>As an admin, I want to edit whatever clients can edit so that I can maintain the accuracy of the portal's projects.</p> <p>Acceptance Tests</p> <ul> <li>Given that a client account has been created and that a client has reviewed a project, when a logged in admin edits the client\u2019s review, then the admin\u2019s edited client review is shown on the project\u2019s View Project page.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4522-edit-tags-as-admin","title":"US 4.52.2 - Edit Tags as Admin","text":"<p>As an admin, I want to edit projects tags so that I can maintain the accuracy of the portal's projects.</p> <p>Acceptance Tests</p> <ul> <li>Given a project, when the admin edits the project's tags then the admin's edits are reflected on the project\u2019s information.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4523-upload-screenshots-as-admin","title":"US 4.52.3 - Upload Screenshots as Admin","text":"<p>As an admin, I want to upload project screenshots so that I can maintain the accuracy of the portal's projects.</p> <p>Acceptance Tests</p> <ul> <li>Given a project page, when the admin uploads a screenshot then the screenshot is displayed and accessible from the project page.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4531-individually-publish-projects","title":"US 4.53.1 - Individually Publish Projects","text":"<p>As an admin, I want to individually publish projects so that I can easily make individual projects visible to the public.</p> <p>Acceptance Tests</p> <ul> <li>Given that a project has been created, when a logged in admin sets the project\u2019s is_published boolean value to true (to publish the project), then the project is visible to the public and is searchable by all.</li> <li>Given that a project has been created and published, when a logged in admin sets the project\u2019s is_published boolean value to false (to un-publish the project), then the project is no longer visible to the public and is no longer searchable by all.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4532-bulk-publish-projects","title":"US 4.53.2 - Bulk Publish Projects","text":"<p>As an admin, I want to bulk publish projects so that I can easily make a large amount of projects visible to the public.</p> <p>Acceptance Tests</p> <ul> <li>Given a list of projects, when the admin sets all projects to published then all the projects become visible to the public and searchable by all.</li> </ul>"},{"location":"planning/ProjectRequirements/#us-4541-delete-project-and-stuff-that-is-dependent-on-the-project","title":"US 4.54.1 - Delete Project and Stuff that is Dependent on the Project","text":"<p>As an admin, I want to delete a project and the stuff that is dependent on the project so that I can maintain the accuracy of the portal's project information.</p> <p>Acceptance Tests</p> <ul> <li>Given a project in Django Admin, when a logged in admin deletes the project, then the project and any information dependent on the project is deleted from Django Admin.</li> </ul>"},{"location":"planning/ProjectRequirements/#moscow","title":"MoSCoW","text":""},{"location":"planning/ProjectRequirements/#must-have","title":"Must Have","text":"<ul> <li>US 1.11.1 - Login with GitHub</li> <li>US 1.31.1 - Edit Name, Bio, and Social Links as Student</li> <li>US 3.11.1 - View Home Page</li> <li>US 3.21.1 - View All Clients</li> <li>US 3.31.1 - View All Projects as User</li> <li>US 3.32.1 - View Project Page</li> <li>US 3.41.1 - View Client Profile Page</li> <li>US 3.42.1 - View Student Profile Page</li> <li>US 3.51.1 - Submit the Proposal Form</li> <li>US 4.11.1 - Login with Email and Password as Admin</li> <li>US 4.31.1 - View All Users</li> <li>US 4.32.1 - Individually Create Users and Projects</li> <li>US 4.32.2 - Bulk Create Users and Projects</li> <li>US 4.33.1 - Edit Student, TA, Client, and Admin Information</li> <li>US 4.34.1 - Delete User and Stuff that is Dependent on the User</li> <li>US 4.51.1 - View All Projects as Admin</li> <li>US 4.53.1 - Individually Publish Projects</li> <li>US 4.54.1 - Delete Project and Stuff that is Dependent on the Project</li> </ul>"},{"location":"planning/ProjectRequirements/#should-have","title":"Should Have","text":"<ul> <li>US 1.21.1 - Edit Title, Overview &amp; Executive Summary</li> <li>US 1.21.2 - Edit External Links (GitHub Repo, Project Link)</li> <li>US 1.21.3 - Edit Embed Links (Screencast, Presentation, Storyboard)</li> <li>US 1.21.4 - Edit Tags as Student</li> <li>US 2.11.1 - Login with Email and Password as Client</li> <li>US 2.21.1 - Edit Whatever Student Can Edit as Client</li> <li>US 2.21.2 - Edit Client Review</li> <li>US 2.21.3 - Edit Tags as Client</li> <li>US 3.12.1 - View About Page</li> <li>US 3.21.2 - View Filtered Clients (nonprofit, startup)</li> <li>US 3.21.3 - View Clients with Infinite Scroll</li> <li>US 3.31.2 - View Projects Filtered by Tags as User</li> <li>US 3.31.3 - View Projects Filtered by Project Properties as User</li> <li>US 3.32.2 - View Embedded Screencast</li> <li>US 4.21.1 - Get Email Notifications with New Proposals</li> <li>US 4.21.2 - Only Get Notifications if Subscribed Admin</li> <li>US 4.31.2 - View Filtered Users</li> <li>US 4.42.1 - Edit Individual User Permissions</li> <li>US 4.51.2 - View Projects Filtered by Tags as Admin</li> <li>US 4.51.3 - View Projects Filtered by Project Properties as Admin</li> <li>US 4.52.1 - Edit Whatever Client Can Edit as Admin</li> <li>US 4.52.2 - Edit Tags as Admin</li> <li>US 4.53.2 - Bulk Publish Projects</li> </ul>"},{"location":"planning/ProjectRequirements/#could-have","title":"Could Have","text":"<ul> <li>US 1.21.5 - Upload Screenshots as Student</li> <li>US 1.31.2 - Automatically Use GitHub Profile Picture</li> <li>US 2.21.4 - Upload Screenshots as Client</li> <li>US 2.31.1 - Edit Name, Bio, and Social Links as Client</li> <li>US 2.41.1 - Edit Name, Description, Website, and Social Links as Client</li> <li>US 2.41.2 - Edit Logo Link</li> <li>US 3.32.3 - View Embedded Storyboard</li> <li>US 3.32.4 - View Embedded Presentation</li> <li>US 4.41.1 - Have Pre-defined User Role Permissions</li> <li>US 4.52.3 - Upload Screenshots as Admin</li> </ul>"},{"location":"planning/ProjectRequirements/#would-like-to-have","title":"Would Like to Have","text":"<ul> <li>US 1.31.3 - Edit Profile Picture as Student</li> <li>US 2.31.2 - Edit Profile Picture as Client</li> <li>US 3.21.4 - Fuzzy Search Clients</li> <li>US 3.31.4 - Fuzzy Search Projects</li> <li>US 3.32.5 - Share Project to Facebook &amp; LinkedIn</li> <li>US 3.32.6 - Storyboard thumbnail image can be expanded on click</li> </ul>"},{"location":"planning/ProjectRequirements/#similar-products","title":"Similar Products","text":"<ul> <li>ProductHunt     - Platform to share and discover new products     - Design: Demo Page         - We could use ProductHunt's demo page as inspiration for designing Project Portal's demo pages (so, demo videos would be near the top of the page and user comments would be under the demo videos)     - Functionality: Upvote Button         - ProductHunt only has an upvote button for projects (so, no dislike button), and we could implement a similar feature in Project Portals to maintain a positive environment for project contributors.</li> <li>BetaList     - Community for makers and early adopters to showcase their startups     - Design: Home Page         - We could use BetaList's home page as inspiration for designing Project Portal's home page (so, we'd have a gallery view to showcase projects and their descriptions instead of, or in addition to, a list view)</li> <li>Launching Next     - Platform to publish the newest, trending tech startups and projects.     - Design: Browse Page         - Launching Next's startups are organized by tags to browse through, which we could as inspiration for how we organize projects     - Functionality: External Link to Startup         - Launching Next's startups have external links to their webpage, so users can go to a startup's webpage directly from the startup's Launching Next webpage. We could implement a similar feature so that project portal pages link to the project webpages/apps.     - Functionality: Share Link         - Startups that have a page on Launching Next have the ability to share a link to their Launching Next page. We could implement a similar feature so that clients and students could share links to their projects on the portal.</li> <li>AngelList     - Platform for investors to find startups to invest in and for people who want to work at startups to find a job.     - Design: Candidate Profiles         - AngelList candidates can create profiles with their job title and experiences; we could use that profile design as inspiration for what information students could fill into their project portal student profile.     - Design: Company Profiles         - AngelList companies and startups can make profiles with a summary, previous/current jobs, who works there, pictures and descriptions of work culture, etc.; we could use that profile design as inspiration for what information clients could fill into their project portal client profile.     - Functionality: Job Posting         - AngelList clients have the ability to post a job and to look for people to join their startup. We could implement a similar feature where project portal clients would be able to propose projects for students to work on directly on the project portal.</li> </ul>"},{"location":"planning/ProjectRequirements/#open-source-products","title":"Open-source Products","text":"<ul> <li>Project Portal for InnerSource     - Platform for people to find InnerSource projects.     - Design: Home Page         - We could use BetaList's home page as inspiration for designing Project Portal's home page (so, we'd have a gallery view to showcase projects, their project screenshots/images, and their descriptions)</li> <li>React Hook Form     - Tool for easing the form-building process in React.     - Functionality: Tool         - We could use React Hook Form with all the forms that we create within the project portal to make it easier for us to manage form inputs, form submission and more.</li> </ul>"},{"location":"planning/ProjectRequirements/#technical-resources","title":"Technical Resources","text":""},{"location":"planning/ProjectRequirements/#backend-django-postgresql","title":"Backend: Django + PostgreSQL","text":"<ul> <li>Django Documentation</li> <li>Django REST Framework (for the API)</li> <li>PostgreSQL Documentation</li> <li>Setting up PostgreSQL with Django Tutorial</li> <li>Testing in Django</li> </ul>"},{"location":"planning/ProjectRequirements/#frontend-react","title":"Frontend: React","text":"<ul> <li>React Documentation</li> <li>React Hooks Documentation</li> <li>Functional Component React Tutorial</li> <li>React Testing Overview</li> </ul>"},{"location":"planning/ProjectRequirements/#continuous-integration-github-actions","title":"Continuous Integration: GitHub Actions","text":"<ul> <li>GitHub Actions Documentation</li> <li>Automated Testing with GitHub Actions Tutorial</li> <li>GitHub Actions Code Formatting Workflow</li> </ul>"},{"location":"planning/ProjectRequirements/#deployment-cybera","title":"Deployment: Cybera","text":"<ul> <li>Cybera Guide</li> <li>Cybera Tutorial</li> </ul>"},{"location":"planning/SoftwareDesign/","title":"Software Design","text":"<p>Contributors: Will, Natasha, Kyle, Ayo, Alisha, Andrews</p> <p>Date: Friday, September 24, 2021</p>"},{"location":"planning/SoftwareDesign/#architecture","title":"Architecture","text":""},{"location":"planning/SoftwareDesign/#backend","title":"Backend","text":"<p>We plan to use Django, PostgreSQL, and the Django REST framework for our backend.</p>"},{"location":"planning/SoftwareDesign/#frontend","title":"Frontend","text":"<p>We plan to use React for our frontend. We also intend to leverage the Django admin interface to facilitate management of users and projects for 401 instructors and TAs.</p>"},{"location":"planning/SoftwareDesign/#authentication","title":"Authentication","text":"<p>Authentication will vary based on the type of user. Admins and client representatives will login with an email and password, while students and TAs login with GitHub.</p>"},{"location":"planning/SoftwareDesign/#architecture-diagram","title":"Architecture Diagram","text":""},{"location":"planning/SoftwareDesign/#uml-class-diagram","title":"UML Class Diagram","text":"<p>We made a UML class diagram for our Django models classes, to model their attributes and the relationships between them.</p> <p></p>"},{"location":"planning/SoftwareDesign/#sequence-diagrams","title":"Sequence Diagrams","text":"<p>We made some sequence diagrams to visualize interactions between users and the site. These do not cover all interactions, just some we thought were particularly complex or interesting.</p>"},{"location":"planning/SoftwareDesign/#filter-projects","title":"Filter Projects","text":"<p>Visitors to the project portal are able to filter projects across various dimensions (term, programming languages, frameworks, etc.). This diagram shows the call to our REST API to get projects matching the filter.</p> <p></p>"},{"location":"planning/SoftwareDesign/#project-proposal","title":"Project Proposal","text":"<p>Potential clients visiting the site are able to submit proposals for future CMPUT 401 projects. This diagram shows the process of submitting a project (which is automatically emailed to 401 staff).</p> <p></p>"},{"location":"planning/SoftwareDesign/#importing-projects-and-students","title":"Importing Projects and Students","text":"<p>Admins can bulk create projects and student accounts by uploading a CSV to the site.</p> <p></p>"},{"location":"planning/SoftwareDesign/#login-with-email-and-password","title":"Login with Email and Password","text":"<p>Admins and client representatives can login to the site with their email and password.</p> <p></p>"},{"location":"planning/SoftwareDesign/#login-with-github","title":"Login with GitHub","text":"<p>Students and TAs can login to the site with GitHub.</p> <p></p>"},{"location":"planning/SoftwareDesign/#edit-projects","title":"Edit Projects","text":"<p>Students can edit the information on their project page.</p> <p></p>"},{"location":"planning/SoftwareDesign/#low-fidelity-user-interface","title":"Low-Fidelity User Interface","text":"<p>This diagram shows a prototype of the website's UI, and the interactions and links between the different pages.</p> <p></p>"}]}